@startuml
' Gaya tampilan
skinparam classAttributeIconSize 0
skinparam class {
  BackgroundColor LightYellow
  BorderColor DarkOrange
}

class Customer {
  - customerId: String
  - currentTable: String
  + viewMenu(): List<MenuItem>
  + placeOrder(items: List<OrderItem>, table: String): Order
  + viewOrderHistory(): List<Order>
}

class MenuItem {
  - menuId: String
  - name: String
  - description: String
  - price: Double
  - category: String
  - isAvailable: Boolean
  + getDetails(): String
}

class OrderItem {
  - menuItem: MenuItem
  - quantity: Integer
  - specialNotes: String
  + calculateSubtotal(): Double
}

class Order {
  - orderId: String
  - tableNumber: String
  - orderTime: LocalDateTime
  - status: OrderStatus
  - items: List<OrderItem>
  - promoApplied: PromoCode
  - totalAmount: Double
  + addItem(item: OrderItem)
  + removeItem(item: OrderItem)
  + applyPromo(promo: PromoCode)
  + calculateTotal(): Double
  + pay(paymentMethod: String): Boolean
  + cancel(): Boolean
}

enum OrderStatus {
  PENDING
  PAID
  IN_KITCHEN
  READY
  COMPLETED
  CANCELLED
}

class PromoCode {
  - code: String
  - discountType: String  // "PERCENT" atau "FIXED"
  - value: Double
  - minOrderAmount: Double
  - isActive: Boolean
  + isValid(orderTotal: Double): Boolean
}

class Payment {
  - paymentId: String
  - orderId: String
  - amount: Double
  - method: String  // "QRIS", "CASH", "EWALLET"
  - timestamp: LocalDateTime
  - externalRef: String
  - isSuccessful: Boolean
  + verify(): Boolean
}

class KitchenNotification {
  - notificationId: String
  - orderId: String
  - items: List<OrderItem>
  - timestamp: LocalDateTime
  - printed: Boolean
  + sendToKitchen()
  + markAsPrinted()
}

class SalesReport {
  - reportId: String
  - month: YearMonth
  - totalOrders: Integer
  - totalRevenue: Double
  - topSellingItems: List<MenuItem>
  + generate(orders: List<Order>)
  + exportToExcel(): File
}

' --- Relasi ---
Customer "1" -- "0..*" Order : places >
Order "1" -- "1..*" OrderItem : contains >
Order "1" -- "0..1" PromoCode : uses >
Order "1" -- "1" Payment : has >
MenuItem "1" -- "1..*" OrderItem : used in >
Order "1" -- "1" KitchenNotification : triggers >
SalesReport "1" -- "*" Order : aggregates >

' Catatan
note top of Order
  Status berubah otomatis:
  PENDING → PAID → IN_KITCHEN → READY → COMPLETED
end note

note right of Payment
  Integrasi dengan
  gateway eksternal
  (misal: Midtrans, Xendit)
end note
@enduml